name: Continuous Integration for ScheduleApi

on:
  pull_request:
    branches: ['develop', 'main']
  push:
    branches: ['ci-integration']

jobs:
  avoid-redundant-builds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cancel previous redundant runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get Yarn cache directory path
        id: yarn-cache-dir
        run: |
          echo "::set-output name=cache-path::$(yarn cache dir)"
          echo "Yarn cache directory path is $(yarn cache dir)"

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: 'yarn'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir.outputs.cache-path }}

          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Lint
        run: yarn lint

      - run: yarn build

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: docker:20.10.7
        options: --privileged
    env:
      PORT: ${{ secrets.PORT }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      POSTGRES_USER_TEST: ${{ secrets.POSTGRES_USER_TEST }}
      POSTGRES_PASSWORD_TEST: ${{ secrets.POSTGRES_PASSWORD_TEST }}
      POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_TEST }}
      PRISMA_LOG_LEVEL: ${{ secrets.PRISMA_LOG_LEVEL }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      DEBUG: ${{ secrets.DEBUG }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Start Test Environment
        run: docker-compose -f docker-compose.test.yaml up -d

      - name: Install Dependencies
        run: yarn install

      - name: Generate Prisma Client
        run: yarn prisma generate

      - run: yarn prisma db push

      - name: Run Tests
        run: yarn test

      - name: Stop Test Environment
        run: docker-compose -f docker-compose.test.yaml down
